<UserControl x:Class="_02350Project.View.NodeUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
             mc:Ignorable="d" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}" Width="{Binding Width}" Height="{Binding Height}"
             d:DesignHeight="180" d:DesignWidth="135">
    <!--
        ListBox Styling found from: http://social.msdn.microsoft.com/Forums/vstudio/en-US/5922cda0-c668-4333-a44d-7dab266555b4/listbox-readonly?forum=wpf
    -->

    <UserControl.Resources>
        <!--http://stackoverflow.com/questions/1499016/reusing-a-treeviews-expand-and-collapse-buttons-in-wpf-->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <ControlTemplate x:Key="toggleButtonTemplate" TargetType="ToggleButton">
            <Grid
            Width="15"
            Height="13"
            Background="Transparent">
                <Path x:Name="ExpandPath"
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Margin="1,1,1,1"
              Fill="{StaticResource GlyphBrush}"
              Data="M 4 0 L 8 4 L 4 8 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"
                 Value="True">
                    <Setter Property="Data"
                  TargetName="ExpandPath"
                  Value="M 0 4 L 8 4 L 4 8 Z"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="toggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template" Value="{StaticResource toggleButtonTemplate}" />
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>

    <Grid>

        <!--http://www.codeproject.com/Tips/286211/All-purpose-Boolean-to-Visibility-Converter
            Convert VisibilityToBoolean so true:Visible, false:Hidden and not true:Visible, false:Collapsed-->

        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="4" Background="WhiteSmoke">
            <Border.Effect>
                <DropShadowEffect Opacity="0.25" ShadowDepth="2" />
            </Border.Effect>
            <DockPanel LastChildFill="True">

                <!-- <TextBlock Text="«Interface»" FontSize="10" TextAlignment="Center" Visibility="{Binding InterfaceFlag, Converter={StaticResource BoolToVis}}"/>-->

                <!--NODE HEADER START-->

                <StackPanel Margin="7" DockPanel.Dock="Top">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Name, FallbackValue=[CLASS_NAME]}" FontStyle="Italic" FontWeight="Bold" Grid.Column="0"/>
                        <ToggleButton Style="{StaticResource toggleButtonStyle}" Cursor="Hand" Grid.Column="2" IsChecked="{Binding NodeCollapsed}"/>
                    </Grid>
                    <TextBlock Text="{Binding NodeSubText}" FontSize="11"/>
                </StackPanel>

                <!--NODE HEADER END-->

                <!--NODE CONTENT START-->
                <StackPanel Visibility="{Binding NodeCollapsed, Converter={StaticResource BoolToVis}}">

                    <!--ATTRIBUTE START-->
                    <!--ATTRIBUTE HEADER START-->
                    <StackPanel Orientation="Horizontal" Background="LightGray">
                        <ToggleButton Cursor="Hand" Height="10" Width="10" Content="+" Style="{StaticResource toggleButtonStyle}" Margin="5,0,0,0" IsChecked="{Binding AttCollapsed}"/>
                        <TextBlock Text="Attributes" Margin="5,0,0,0" FontSize="11"/>
                    </StackPanel>
                    <!--ATTRIBUTE HEADER END-->

                    <!--ATTRIBUTE CONTENT START-->
                    <ListBox IsEnabled="False" ItemsSource="{Binding Attributes}" Margin="10,2,10,2" Visibility="{Binding AttCollapsed, Converter={StaticResource BoolToVis}}">
                        <ListBox.Template>
                            <ControlTemplate TargetType="{x:Type ListBox}">
                                <Grid>
                                    <Border BorderThickness="0"/>
                                    <ScrollViewer Margin="1" Focusable="false" Background="WhiteSmoke" Padding="-1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Foreground="Black">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.Resources>
                            <Style x:Key="{x:Type ListBoxItem}">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <ContentPresenter/>
                                        </ControlTemplate >
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>
                    </ListBox>
                    <!--ATTRIBUTE CONTENT END-->
                    <!--ATTRIBUTE END-->

                    <!--METHOD START-->
                    <!--METHOD HEADER START-->
                    <StackPanel Orientation="Horizontal" Background="LightGray">
                        <ToggleButton Height="10" Width="10" Content="+" Style="{StaticResource toggleButtonStyle}" Margin="5,0,0,0" IsChecked="{Binding MetCollapsed}" Cursor="Hand"/>
                        <TextBlock Text="Methods" Margin="5,0,0,0" FontSize="11"/>
                    </StackPanel>
                    <!--METHOD HEADER END-->

                    <!--METHOD CONTENT START-->
                    <ListBox IsEnabled="False" ItemsSource="{Binding Methods}" Margin="10,2,10,2" Visibility="{Binding MetCollapsed, Converter={StaticResource BoolToVis}}">
                        <ListBox.Template>
                            <ControlTemplate TargetType="{x:Type ListBox}">
                                <Grid>
                                    <Border BorderThickness="0"/>
                                    <ScrollViewer Margin="1" Focusable="false" Background="WhiteSmoke" Padding="-1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Foreground="Black">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.Resources>
                            <Style x:Key="{x:Type ListBoxItem}">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <ContentPresenter/>
                                        </ControlTemplate >
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>
                    </ListBox>
                    <!--METHOD CONTENT END-->
                    <!--METHOD END-->
                </StackPanel>
                <!--NODE CONTENT END-->

            </DockPanel>
        </Border>

        <!--MOUSE TRIGGERS START-->
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseDown">
                <cmd:EventToCommand Command="{Binding DataContext.MouseDownNodeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseUp">
                <cmd:EventToCommand Command="{Binding DataContext.MouseUpNodeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseMove">
                <cmd:EventToCommand Command="{Binding DataContext.MouseMoveNodeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <!--MOUSE TRIGGERS END-->
    </Grid>
</UserControl>
